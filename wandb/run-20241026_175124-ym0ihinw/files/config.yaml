wandb_version: 1

learning_rate:
  desc: null
  value: 0.0001
architecture:
  desc: null
  value: MultimodalClassifier1D
dataset:
  desc: null
  value:
  - tap
  - slide
modelType:
  desc: null
  value: typeClassifier
model:
  desc: null
  value: "MultimodalClassifier1D(\n  (accel_conv): Sequential(\n    (0): Conv1d(3,\
    \ 32, kernel_size=(3,), stride=(1,), padding=(1,))\n    (1): BatchNorm1d(32, eps=1e-05,\
    \ momentum=0.1, affine=True, track_running_stats=True)\n    (2): ReLU()\n    (3):\
    \ MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n\
    \    (4): Conv1d(32, 64, kernel_size=(3,), stride=(1,), padding=(1,))\n    (5):\
    \ BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \    (6): ReLU()\n    (7): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1,\
    \ ceil_mode=False)\n    (8): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))\n\
    \    (9): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \    (10): ReLU()\n    (11): AdaptiveAvgPool1d(output_size=1)\n  )\n  (audio_conv):\
    \ Sequential(\n    (0): Conv1d(1, 32, kernel_size=(3,), stride=(1,), padding=(1,))\n\
    \    (1): BatchNorm1d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \    (2): ReLU()\n    (3): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1,\
    \ ceil_mode=False)\n    (4): Conv1d(32, 64, kernel_size=(3,), stride=(1,), padding=(1,))\n\
    \    (5): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \    (6): ReLU()\n    (7): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1,\
    \ ceil_mode=False)\n    (8): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,))\n\
    \    (9): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \    (10): ReLU()\n    (11): AdaptiveAvgPool1d(output_size=1)\n  )\n  (classifier_main):\
    \ Sequential(\n    (0): Linear(in_features=256, out_features=128, bias=True)\n\
    \    (1): ReLU()\n    (2): Dropout(p=0.5, inplace=False)\n    (3): Linear(in_features=128,\
    \ out_features=1, bias=True)\n  )\n  (classifier_sub): Sequential(\n    (0): Linear(in_features=256,\
    \ out_features=128, bias=True)\n    (1): ReLU()\n    (2): Dropout(p=0.5, inplace=False)\n\
    \    (3): Linear(in_features=128, out_features=8, bias=True)\n  )\n)"
epochs:
  desc: null
  value: 400
batchSize:
  desc: null
  value: 32
_wandb:
  desc: null
  value:
    python_version: 3.9.18
    cli_version: 0.17.0
    framework: torch
    is_jupyter_run: false
    is_kaggle_kernel: false
    start_time: 1729932684
    t:
      1:
      - 1
      - 5
      - 53
      - 55
      2:
      - 1
      - 5
      - 53
      - 55
      3:
      - 16
      - 23
      4: 3.9.18
      5: 0.17.0
      8:
      - 5
      13: darwin-x86_64
